1、应用程序执行期间，只要对象的equals方法的比较操作所用到的信息没有被修改，那么同一个对象调用多次，hashCode方法都必须始终如一的返回一个整数。

2、如果两个对象根据equals方法比较是相等的,那么调用这两个对象中的任意一个对象的hashCode方法都必须产生像的整数结果

3、如果两个对象根据equals方法比较是不相同的，那么调用任意一个对象的hashCode方法，则不一定要产生不同的整数结果


实现高质量的equals方法的诀窍：
  1、使用==操作符检查“参数是否为这个对象的引用”，如果是，则返回true

  2、使用instanceOf操作符检查“参数是否为正确的类型”，如果不是，则返回false

  3、把参数转换成正的类型，在先做了instanceOf测试之后

  4、对于该类中的每个关键域，检查参数中的域是否与该对象中的对应的域相匹配，如果测试全部通过，则返回true,否则返回false

    对于既不是float也不是double类型的基本类型域，可使用操作符==进行比较，对于对象引用域，可以递归调用equals方法，
    对于float域，可以使用Float.compareTo方法
    对于double域，可以使用Double.compareTo方法

  5、当你完成equals方法时，应该问三个问题，是否对称、传递、一致