不可变的类：
  实例不能被修改的类，每个实例中包含的所有信息都必须在创建该类实例的时候就提供，并在对象的整个生命周期内固定不变
  java中很多不可变的类：String 基本类型的包装类、BigInteger BigDecimal

  基本类型：
    整数型：byte，short，int，long；

    浮点型：float，double

    布尔型：boolean

    字符型：char

  使类成为不可变的类
  1、不提供任何会修改对象状态的方法
  2、保证不会被扩展 一般做法使用final修饰
  3、使所有的域都是final
  4、使所有的域都是private
  5、确保对于任何可变组件的互斥访问


  函数式functional做法：如Complex的算术运算，是如何创建并返回新的实例，而不是修改这实例
  与函数式做法对应的是过程procedural或者命令式的imperative做法，这些做法，将一个过程作用在操作数上，会导致他的状态改变

  不可变类对象本质上是线程安全的，他们不要求同步，不可变对象可以自由共享
      对于频繁使用的值，为他们提供静态final常量，例如Complex类可能提供的常量
        public static final Complex ZERO=new Complex(0,0);

   不仅可以共享不可变对象，甚至可以共享不可变对象中的内部信息


   不可变对象的去点，对于每个不同的值都需要一个单独的对象








